name: Release

on:
  # push:
  #   tags:
  #     - "v*"
  workflow_dispatch:
    inputs:
      publish_to_pypi:
        description: "Publish to PyPI"
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions:
  contents: read

jobs:
  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      attestations: write
      actions: read

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      # List files for debugging
      - name: List distribution files
        run: ls -la dist/

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "dist/*"

      # Publish to PyPI when tagged or requested
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.publish_to_pypi == 'true'
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*

      # Otherwise publish to TestPyPI
      - name: Publish to TestPyPI
        if: ${{ !(startsWith(github.ref, 'refs/tags/') || github.event.inputs.publish_to_pypi == 'true') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
          MATURIN_REPOSITORY: testpypi
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*

      # # Create a GitHub release when a tag is created
      # - name: Create GitHub Release
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     generate_release_notes: true
      #     files: dist/*
