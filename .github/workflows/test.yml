name: Test

on:
  workflow_call:
    inputs:
      build_run_id:
        required: true
        type: string
        description: "The run ID of the build workflow"

permissions:
  contents: read
  actions: read # Needed to download artifacts

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        # Default values for all matrix entries
        test_type: [standard]
        python-version: ["3.12"]
        platform:
          - name: linux-x86_64
            runner: ubuntu-latest
            is_musl: false

        # Override with specific combinations
        include:
          # Platform tests (uses default Python 3.12 and test_type)
          - name: "Linux x86_64"

          - name: "Linux musl"
            platform:
              name: linux-musl-x86_64
              runner: ubuntu-22.04
              is_musl: true

          - name: "Windows"
            platform:
              name: windows-x64
              runner: windows-latest
              is_musl: false

          - name: "macOS x86_64"
            platform:
              name: macos-x86_64
              runner: macos-13
              is_musl: false

          - name: "macOS ARM64"
            platform:
              name: macos-arm64
              runner: macos-14
              is_musl: false

          # Additional Python versions for Linux x86_64
          - name: "Python 3.8"
            python-version: "3.8"

          - name: "Python 3.9"
            python-version: "3.9"

          - name: "Python 3.10"
            python-version: "3.10"

          - name: "Python 3.11"
            python-version: "3.11"

          - name: "Python 3.13"
            python-version: "3.13"

          # Minimum dependencies test
          - name: "Min Dependencies"
            python-version: "3.8"
            test_type: min_deps

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels-${{ matrix.platform.name }}
          path: dist
          run_id: ${{ inputs.build_run_id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Regular tests (non-musl platforms)
      - name: Run regular tests
        if: ${{ matrix.test_type == 'standard' && matrix.platform.is_musl != true }}
        run: |
          python -m pip install pytest
          WHEEL_PATH=$(ls dist/*.whl)
          python -m pip install --force-reinstall "$WHEEL_PATH"
          pytest tests/
        shell: bash

      # Musl tests
      - name: Run musl tests
        if: ${{ matrix.test_type == 'standard' && matrix.platform.is_musl == true }}
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            apk add python3 py3-pip
            python -m venv .venv
            source .venv/bin/activate
            pip install --upgrade pip
            WHEEL_PATH=$(ls dist/*.whl)
            pip install --force-reinstall "$WHEEL_PATH"
            pip install pytest
            pytest tests/

      # Minimum dependencies test
      - name: Run tests with minimum dependencies
        if: ${{ matrix.test_type == 'min_deps' }}
        run: |
          python -m pip install pytest==6.0
          WHEEL_PATH=$(ls dist/*.whl)
          python -m pip install --force-reinstall "$WHEEL_PATH" \
            "numpy==1.20.0" \
            "fsspec==2023.1.0" \
            "s3fs==2023.1.0" \
            "xarray==2023.1.0"
          pytest tests/ -v
        shell: bash
