# This file is autogenerated by maturin v1.7.4
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        # python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        platform:
          - runner: ubuntu-latest
            target: x86_64
            # ensurepip because of: https://github.com/PyO3/maturin-action/issues/249
            before-script: python3 -m ensurepip && cat /etc/os-release && yum install clang -y
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            skip_tests: true
            before-script: |
              cat /etc/os-release && \
              apt-get update && \
              apt-get install --assume-yes --no-install-recommends crossbuild-essential-arm64 && \
              clang --version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: 2_28
          before-script-linux: ${{ matrix.platform.before-script }}
      - uses: ./.github/actions/run-tests
        with:
          skip_tests: ${{ matrix.platform.skip_tests }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: "x86_64-unknown-linux-musl"
            image_tag: "x86_64-musl"
            before-script: cat /etc/os-release && apt install clang -y
            skip_tests: false
          # - target: "aarch64-unknown-linux-musl"
          #   image_tag: "aarch64-musl"
          # - target: "powerpc64le-unknown-linux-musl"
          #   image_tag: "powerpc64le-musl"
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: "-mfpu=vfpv3-d16"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: musllinux_1_2
          container: off
          before-script-linux: ${{ matrix.platform.before-script }}
      - uses: ./.github/actions/run-tests
        with:
          skip_tests: ${{ matrix.platform.skip_tests }}
          is_musl: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          # - runner: windows-latest
          #   target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - uses: ./.github/actions/run-tests
        with:
          skip_tests: ${{ matrix.platform.skip_tests }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - uses: ./.github/actions/run-tests
        with:
          skip_tests: ${{ matrix.platform.skip_tests }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs:
      - linux
      - musllinux
      # - windows
      - macos
      - sdist
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
